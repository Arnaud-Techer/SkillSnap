@using Client.Models

@if (ShowModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto">
            <!-- Modal Header -->
            <div class="flex items-center justify-between p-6 border-b border-gray-200">
                <h3 class="text-xl font-bold text-gray-800">Delete Portfolio</h3>
                <button @onclick="CloseModal" 
                        class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="p-6">
                <div class="mb-6">
                    <div class="flex items-center justify-center w-16 h-16 mx-auto mb-4 bg-red-100 rounded-full">
                        <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                        </svg>
                    </div>
                    <h4 class="text-lg font-semibold text-gray-800 text-center mb-2">Select Portfolio to Delete</h4>
                    <p class="text-sm text-gray-600 text-center">
                        Choose a portfolio from the list below. This action will permanently delete the portfolio and all associated projects and skills.
                    </p>
                </div>

                @if (Portfolios?.Any() == true)
                {
                    <div class="space-y-3 mb-6">
                        @foreach (var portfolio in Portfolios)
                        {
                            <div class="flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                                <input type="radio" 
                                       name="selectedPortfolio" 
                                       value="@portfolio.Id" 
                                       @onchange="@(() => SelectPortfolio(portfolio.Id))"
                                       class="w-4 h-4 text-red-600 border-gray-300 focus:ring-red-500">
                                <div class="ml-3 flex-1">
                                    <div class="flex items-center">
                                        @if (!string.IsNullOrEmpty(portfolio.ProfileImageUrl))
                                        {
                                            <img src="@portfolio.ProfileImageUrl" 
                                                 alt="@portfolio.Name" 
                                                 class="w-8 h-8 rounded-full object-cover mr-3">
                                        }
                                        else
                                        {
                                            <div class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white text-sm font-semibold mr-3">
                                                @portfolio.Name.Substring(0, 1).ToUpper()
                                            </div>
                                        }
                                        <div>
                                            <p class="font-medium text-gray-800">@portfolio.Name</p>
                                            <p class="text-sm text-gray-500">
                                                @portfolio.ProjectCount projects â€¢ @portfolio.SkillCount skills
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    @if (selectedPortfolioId > 0)
                    {
                        <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
                            <div class="flex items-start">
                                <svg class="w-5 h-5 text-red-600 mt-0.5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                </svg>
                                <div>
                                    <h5 class="font-medium text-red-800">Warning: This action cannot be undone!</h5>
                                    <p class="text-sm text-red-700 mt-1">
                                        Deleting this portfolio will permanently remove all associated projects and skills from the database.
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-8">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
                            </svg>
                        </div>
                        <h4 class="text-lg font-medium text-gray-800 mb-2">No Portfolios Found</h4>
                        <p class="text-gray-600">There are no portfolios available to delete.</p>
                    </div>
                }
            </div>

            <!-- Modal Footer -->
            <div class="flex items-center justify-end gap-3 p-6 border-t border-gray-200 bg-gray-50 rounded-b-2xl">
                <button @onclick="CloseModal" 
                        class="px-6 py-2 text-gray-600 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                    Cancel
                </button>
                <button @onclick="HandleDelete" 
                        disabled="@(selectedPortfolioId <= 0 || isDeleting)"
                        class="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors duration-200 flex items-center">
                    @if (isDeleting)
                    {
                        <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        <span>Deleting...</span>
                    }
                    else
                    {
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                        </svg>
                        <span>Delete Portfolio</span>
                    }
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowModal { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }
    [Parameter] public IEnumerable<PortfolioUserSummary>? Portfolios { get; set; }

    private int selectedPortfolioId = 0;
    private bool isDeleting = false;

    private void SelectPortfolio(int portfolioId)
    {
        selectedPortfolioId = portfolioId;
    }

    private async Task CloseModal()
    {
        selectedPortfolioId = 0;
        isDeleting = false;
        await OnClose.InvokeAsync();
    }

    private async Task HandleDelete()
    {
        if (selectedPortfolioId <= 0 || isDeleting || !OnDelete.HasDelegate)
        {
            return;
        }

        isDeleting = true;
        try
        {
            await OnDelete.InvokeAsync(selectedPortfolioId);
        }
        finally
        {
            isDeleting = false;
        }
    }
}
