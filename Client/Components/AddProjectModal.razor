@using Shared.Models

<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4" @onclick="OnClose">
    <div class="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-hidden" @onclick:stopPropagation="true">
        <div class="bg-gradient-to-r from-green-500 to-blue-600 p-6 text-white">
            <div class="flex items-center justify-between">
                <h3 class="text-2xl font-bold flex items-center">
                    <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    </svg>
                    Add New Project
                </h3>
                <button @onclick="OnClose" class="text-white hover:text-gray-200 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>
        
        <div class="p-6">
            <form @onsubmit="HandleSubmit" @onsubmit:preventDefault="true">
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Project Title *</label>
                        <input type="text" @bind="localProjectTitle" 
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                               placeholder="Enter project title"
                               required />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Description *</label>
                        <textarea @bind="localProjectDescription" 
                                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 resize-none"
                                  rows="4"
                                  placeholder="Describe your project, technologies used, and key features..."
                                  required></textarea>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Project Image URL</label>
                        <input type="url" @bind="localProjectImageUrl" 
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                               placeholder="https://example.com/project-screenshot.jpg" />
                    </div>
                </div>

                <div class="flex justify-end space-x-4 mt-6 pt-4 border-t border-gray-200">
                    <button type="button" @onclick="OnClose" 
                            class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-6 py-3 bg-gradient-to-r from-green-500 to-blue-600 text-white rounded-lg hover:from-green-600 hover:to-blue-700 transition-all duration-200">
                        Add Project
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback<(string title, string description, string imageUrl)> OnSubmit { get; set; }

    // Local variables for form inputs
    private string localProjectTitle = string.Empty;
    private string localProjectDescription = string.Empty;
    private string localProjectImageUrl = string.Empty;

    private async Task HandleSubmit()
    {
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync((localProjectTitle, localProjectDescription, localProjectImageUrl));
        }
    }
}
