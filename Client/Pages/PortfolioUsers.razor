@page "/portfolio"
@using Shared.Models
@using Client.Components

<PageTitle>Portfolio - SkillSnap</PageTitle>

<div class="bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50 min-h-screen">
    <!-- Header Section -->
    <div class="bg-white shadow-sm border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-6 py-6">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">Portfolio Showcase</h1>
                    <p class="text-gray-600 mt-1">Discover amazing developers and their incredible work</p>
                </div>
                <div class="flex items-center space-x-4">
                    <button class="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-2 rounded-lg font-medium hover:from-blue-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Add Portfolio
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-6 py-8">
        @if (portfolioUsers?.Any() == true)
        {
            <div class="space-y-12">
                @foreach (var user in portfolioUsers)
                {
                    <div class="bg-white rounded-2xl shadow-xl overflow-hidden border border-gray-100">
                        <!-- User Profile Section -->
                        <div class="bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 p-8">
                            <div class="flex flex-col lg:flex-row items-center lg:items-start space-y-6 lg:space-y-0 lg:space-x-8">
                                <!-- Profile Image -->
                                <div class="flex-shrink-0">
                                    <div class="relative">
                                        <img src="@(string.IsNullOrEmpty(user.ProfileImageUrl) ? "https://via.placeholder.com/150x150/6366f1/ffffff?text=ðŸ‘¤" : user.ProfileImageUrl)" 
                                             alt="@user.Name's profile picture" 
                                             class="w-32 h-32 rounded-full border-4 border-white shadow-2xl object-cover" />
                                        <div class="absolute -bottom-2 -right-2 w-8 h-8 bg-green-500 rounded-full border-4 border-white flex items-center justify-center">
                                            <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                            </svg>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- User Info -->
                                <div class="flex-1 text-center lg:text-left text-white">
                                    <h2 class="text-4xl font-bold mb-2">@user.Name</h2>
                                    <p class="text-xl text-blue-100 mb-4 leading-relaxed">@user.Bio</p>
                                    
                                    <!-- Stats -->
                                    <div class="flex justify-center lg:justify-start space-x-8 mb-6">
                                        <div class="text-center">
                                            <div class="text-3xl font-bold">@(user.Projects?.Count ?? 0)</div>
                                            <div class="text-sm text-blue-100 uppercase tracking-wide">Projects</div>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-3xl font-bold">@(user.Skills?.Count ?? 0)</div>
                                            <div class="text-sm text-blue-100 uppercase tracking-wide">Skills</div>
                                        </div>
                                    </div>
                                    
                                    <!-- Action Buttons -->
                                    <div class="flex flex-col sm:flex-row gap-3 justify-center lg:justify-start">
                                        <button class="bg-white text-blue-600 px-6 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-all duration-200 transform hover:scale-105">
                                            View Full Portfolio
                                        </button>
                                        <button class="border-2 border-white text-white px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-blue-600 transition-all duration-200">
                                            Contact Developer
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Content Sections -->
                        <div class="p-8">
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                                <!-- Skills Section -->
                                <div class="space-y-6">
                                    <div class="flex items-center">
                                        <h3 class="text-2xl font-bold text-gray-800 flex items-center">
                                            <svg class="w-6 h-6 mr-3 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                                            </svg>
                                            Skills & Expertise
                                        </h3>
                                    </div>
                                    
                                    @if (user.Skills?.Any() == true)
                                    {
                                        <div class="space-y-4">
                                            @foreach (var skill in user.Skills.Take(6))
                                            {
                                                <div class="bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors duration-200">
                                                    <div class="flex items-center justify-between mb-2">
                                                        <h4 class="font-semibold text-gray-800">@skill.Name</h4>
                                                        <span class="text-sm font-medium @GetLevelColor(skill.Level) px-3 py-1 rounded-full">
                                                            @skill.Level
                                                        </span>
                                                    </div>
                                                    <div class="w-full bg-gray-200 rounded-full h-2">
                                                        <div class="h-2 rounded-full transition-all duration-1000 ease-out @GetProgressBarColor(skill.Level)" 
                                                             style="width: @GetProgressPercentage(skill.Level)%"></div>
                                                    </div>
                                                </div>
                                            }
                                            @if (user.Skills.Count > 6)
                                            {
                                                <div class="text-center">
                                                    <span class="text-sm text-gray-500 bg-gray-100 px-4 py-2 rounded-full">
                                                        +@(user.Skills.Count - 6) more skills
                                                    </span>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-8 text-gray-500">
                                            <p class="text-lg">No skills added yet</p>
                                        </div>
                                    }
                                </div>
                                
                                <!-- Projects Preview Section -->
                                <div class="space-y-6">
                                    <div class="flex items-center justify-between">
                                        <h3 class="text-2xl font-bold text-gray-800 flex items-center">
                                            <svg class="w-6 h-6 mr-3 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                                            </svg>
                                            Featured Projects
                                        </h3>
                                        <span class="text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
                                            @(user.Projects?.Count ?? 0) projects
                                        </span>
                                    </div>
                                    
                                    @if (user.Projects?.Any() == true)
                                    {
                                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                                            @foreach (var project in user.Projects.Take(4))
                                            {
                                                <div class="group bg-white border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-all duration-300">
                                                    <div class="h-32 overflow-hidden">
                                                        <img src="@(string.IsNullOrEmpty(project.ImageUrl) ? "https://via.placeholder.com/300x200/6366f1/ffffff?text=Project" : project.ImageUrl)" 
                                                             alt="@project.Title" 
                                                             class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500" />
                                                    </div>
                                                    <div class="p-4">
                                                        <h4 class="font-semibold text-gray-800 mb-1 group-hover:text-blue-600 transition-colors duration-200">
                                                            @project.Title
                                                        </h4>
                                                        <p class="text-gray-600 text-sm line-clamp-2">
                                                            @project.Description
                                                        </p>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        
                                        @if (user.Projects.Count > 4)
                                        {
                                            <div class="text-center">
                                                <button class="text-blue-600 hover:text-blue-800 font-medium text-sm">
                                                    View all @user.Projects.Count projects â†’
                                                </button>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="text-center py-8 text-gray-500">
                                            <p class="text-lg">No projects added yet</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="text-center py-16">
                <div class="bg-gray-100 rounded-full w-32 h-32 flex items-center justify-center mx-auto mb-8">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                </div>
                <h2 class="text-3xl font-bold text-gray-700 mb-4">No portfolios found</h2>
                <p class="text-gray-500 mb-8 max-w-md mx-auto">
                    Be the first to showcase your amazing work! Create your portfolio and let others discover your incredible projects and skills.
                </p>
                <button class="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-8 py-4 rounded-lg font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105">
                    Create Your Portfolio
                </button>
            </div>
        }
    </div>
</div>

@code {
    private List<PortfolioUser>? portfolioUsers;

    protected override async Task OnInitializedAsync()
    {
        // TODO: Replace with actual API call
        await LoadPortfolioUsers();
    }

    private async Task LoadPortfolioUsers()
    {
        // Mock data for demonstration
        portfolioUsers = new List<PortfolioUser>
        {
            new PortfolioUser
            {
                Id = 1,
                Name = "Alex Johnson",
                Bio = "Full-stack developer passionate about creating innovative web applications and mobile solutions.",
                ProfileImageUrl = "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face",
                Projects = new List<Project>
                {
                    new Project { Id = 1, Title = "E-Commerce Platform", Description = "A modern e-commerce solution built with React and Node.js", ImageUrl = "https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=400&h=300&fit=crop" },
                    new Project { Id = 2, Title = "Task Management App", Description = "Collaborative task management tool with real-time updates", ImageUrl = "https://images.unsplash.com/photo-1611224923853-80b023f02d71?w=400&h=300&fit=crop" },
                    new Project { Id = 3, Title = "Weather Dashboard", Description = "Beautiful weather application with location-based forecasts", ImageUrl = "https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?w=400&h=300&fit=crop" }
                },
                Skills = new List<Skill>
                {
                    new Skill { Id = 1, Name = "React", Level = "Expert" },
                    new Skill { Id = 2, Name = "Node.js", Level = "Advanced" },
                    new Skill { Id = 3, Name = "TypeScript", Level = "Advanced" },
                    new Skill { Id = 4, Name = "MongoDB", Level = "Intermediate" },
                    new Skill { Id = 5, Name = "AWS", Level = "Intermediate" },
                    new Skill { Id = 6, Name = "Docker", Level = "Novice" }
                }
            },
            new PortfolioUser
            {
                Id = 2,
                Name = "Sarah Chen",
                Bio = "UI/UX Designer and Frontend Developer specializing in creating beautiful, user-centered digital experiences.",
                ProfileImageUrl = "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face",
                Projects = new List<Project>
                {
                    new Project { Id = 4, Title = "Design System", Description = "Comprehensive design system for a fintech startup", ImageUrl = "https://images.unsplash.com/photo-1558655146-9f40138edfeb?w=400&h=300&fit=crop" },
                    new Project { Id = 5, Title = "Mobile Banking App", Description = "Intuitive mobile banking application with advanced security", ImageUrl = "https://images.unsplash.com/photo-1563013544-824ae1b704d3?w=400&h=300&fit=crop" }
                },
                Skills = new List<Skill>
                {
                    new Skill { Id = 7, Name = "Figma", Level = "Expert" },
                    new Skill { Id = 8, Name = "Vue.js", Level = "Advanced" },
                    new Skill { Id = 9, Name = "CSS/SCSS", Level = "Expert" },
                    new Skill { Id = 10, Name = "Adobe Creative Suite", Level = "Advanced" }
                }
            }
        };
    }

    private string GetLevelColor(string level)
    {
        return level?.ToLower() switch
        {
            "beginner" => "bg-red-100 text-red-800",
            "novice" => "bg-orange-100 text-orange-800",
            "intermediate" => "bg-yellow-100 text-yellow-800",
            "advanced" => "bg-blue-100 text-blue-800",
            "expert" => "bg-green-100 text-green-800",
            "master" => "bg-purple-100 text-purple-800",
            _ => "bg-gray-100 text-gray-800"
        };
    }

    private string GetProgressBarColor(string level)
    {
        return level?.ToLower() switch
        {
            "beginner" => "bg-gradient-to-r from-red-400 to-red-500",
            "novice" => "bg-gradient-to-r from-orange-400 to-orange-500",
            "intermediate" => "bg-gradient-to-r from-yellow-400 to-yellow-500",
            "advanced" => "bg-gradient-to-r from-blue-400 to-blue-500",
            "expert" => "bg-gradient-to-r from-green-400 to-green-500",
            "master" => "bg-gradient-to-r from-purple-400 to-purple-500",
            _ => "bg-gradient-to-r from-gray-400 to-gray-500"
        };
    }

    private int GetProgressPercentage(string level)
    {
        return level?.ToLower() switch
        {
            "beginner" => 20,
            "novice" => 35,
            "intermediate" => 50,
            "advanced" => 70,
            "expert" => 85,
            "master" => 100,
            _ => 0
        };
    }
}
